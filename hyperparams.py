# here we just set defaults of the parameters.
# for actual experiments, edit experiments.py

gene_init = ""
total_init = ""

dataset_name = 'tv'
trainset = 'train'
valset = 'val'
B = 4 # batch size
N = 20499 # gene profile length
nCats = 46

do_batch_balance = True

#----------- augs -----------#
do_log = True
mult_noise_std = 10.0
add_noise_std = 0.0
do_normalize = False

#----------- net design -----------#
do_train = False

# total_init with the autogenerated name
do_resume = False

#----------- general hypers -----------#
lr = 1e-5
do_dropout_input = False
do_dropout = False
do_profile = False
do_fast_logging = True # doesn't log the graph

#----------- mod -----------#
mod = "a"

############ slower-to-change hyperparams below here ############

# queue_capacity = 100+3*B
queue_capacity = 100+2*B

pad = "SYMMETRIC"

eps = 1e-6

## logging
log_freq_t = 100
log_freq_v = 100
snap_freq = 500

max_iters = 10000
aug_train = True
aug_val = False
shuffle_train = True
shuffle_val = True

dataset_list_dir = "./data/"
dataset_location = "./data/tfrs/"
fold = 0
testset = False

############ rev up the experiment ############

execfile('experiments.py')

############ make some final adjustments ############

if not testset:
    dataset_t = "%s/%s_%d.txt" % (dataset_list_dir, trainset, fold)
    dataset_v = "%s/%s_%d.txt" % (dataset_list_dir, valset, fold)
else:
    shuffle_train = False
    shuffle_val = False
    dataset_location = "./data/tfrs_test/"
    dataset_t = "%s/test.txt" % dataset_list_dir
    dataset_v = "%s/test.txt" % dataset_list_dir
    max_iters = 2855 # the length of the test set

if not do_train:
    do_batch_balance = False
    B = 1
    
############ autogen a name; don't touch any hypers! ############

if do_batch_balance:
    name = "%02dbb_%.1e" % (B*nCats, lr)
else:
    name = "%02d_%.1e" % (B, lr)

if do_log:
    name += "_log"
if not add_noise_std==0.0:
    name += "_an%.2f" % add_noise_std
if not mult_noise_std==0.0:
    name += "_mn%.2f" % mult_noise_std
if do_normalize:
    name += "_norm"
    
if do_dropout_input:
    name += "_dropi"
if do_dropout:
    name += "_drop"
    
##### end model description

# add some training data info
name = "%s_%s%d" % (name, dataset_name, fold)
if trainset:
    name = "%s_%s" % (name, trainset)
if trainset==valset:
    # only val!
    name += "_ov"
        
if mod:
    name = "%s_%s" % (name, mod)

if do_resume:
    total_init = name

    
print name
